{"ast":null,"code":"import _toConsumableArray from\"/Users/rosejang/Desktop/project/todo-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/rosejang/Desktop/project/todo-list/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import React,{useState,useEffect}from'react';import{IoMdAdd}from'react-icons/io';import ListItem from'./components/ListItem';import TodoTitle from'./components/TodoTitle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),todoText=_useState2[0],setTodoText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allTodos=_useState4[0],setAllTodos=_useState4[1];/** 새로운 할 일을 추가할 때 작동시킬 함수 */var addTodo=function addTodo(e){e.preventDefault();var todoItem={id:new Date().getTime(),text:todoText,isChecked:false,isEdit:false};if(todoText!==''){setAllTodos([].concat(_toConsumableArray(allTodos),[todoItem]));setTodoText('');}};/** localStorage에 있는 이전 todo 목록들을 불러와 allTodos에 담아준다 */var getAllTodos=function getAllTodos(){var stored=JSON.parse(localStorage.getItem('todo'));if(stored){setAllTodos(stored);}};/** 체크박스 토글기능 */var toggleChecked=function toggleChecked(id){var updatedTodos=allTodos.map(function(todo){if(todo.id===id){todo.isChecked=!todo.isChecked;}return todo;});setAllTodos(updatedTodos);};/** todo 아이템 삭제 */var deleteTodo=function deleteTodo(id){var filteredTodo=allTodos.filter(function(todo){return todo.id!==id;});setAllTodos(filteredTodo);};var toggleEdit=function toggleEdit(id){var editTodos=allTodos.map(function(todo){if(todo.id===id)todo.isEdit=!todo.isEdit;return todo;});setAllTodos(editTodos);};var onEditTodo=function onEditTodo(e,id){var editTodo=allTodos.map(function(todo){if(todo.id===id)todo.text=e.target.value;return todo;});setAllTodos(editTodo);};useEffect(function(){getAllTodos();},[]);useEffect(function(){localStorage.setItem('todo',JSON.stringify(allTodos));},[allTodos]);return/*#__PURE__*/_jsxs(\"main\",{className:\"App\",children:[/*#__PURE__*/_jsx(TodoTitle,{len:allTodos.length}),/*#__PURE__*/_jsxs(\"div\",{className:\"App_todo\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"App_input_wrapper\",onSubmit:function onSubmit(e){return addTodo(e);},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"App_input\",value:todoText,placeholder:\"Create new todo...\",onChange:function onChange(e){return setTodoText(e.target.value);}}),/*#__PURE__*/_jsx(\"div\",{className:\"App_input_button\",onClick:function onClick(e){return addTodo(e);},children:/*#__PURE__*/_jsx(IoMdAdd,{size:24})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App_todo_list\",children:[allTodos.map(function(todo){return/*#__PURE__*/_jsx(ListItem,{todo:todo,toggleChecked:toggleChecked,deleteTodo:deleteTodo,toggleEdit:toggleEdit,onEditTodo:onEditTodo},todo.id);}),allTodos.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"empty\",children:\"There are no todos\"})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","IoMdAdd","ListItem","TodoTitle","App","todoText","setTodoText","allTodos","setAllTodos","addTodo","e","preventDefault","todoItem","id","Date","getTime","text","isChecked","isEdit","getAllTodos","stored","JSON","parse","localStorage","getItem","toggleChecked","updatedTodos","map","todo","deleteTodo","filteredTodo","filter","toggleEdit","editTodos","onEditTodo","editTodo","target","value","setItem","stringify","length"],"sources":["/Users/rosejang/Desktop/project/todo-list/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { IoMdAdd } from 'react-icons/io';\nimport ListItem from './components/ListItem';\nimport TodoTitle from './components/TodoTitle';\n\nfunction App() {\n  const [todoText, setTodoText] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n\n  /** 새로운 할 일을 추가할 때 작동시킬 함수 */\n  const addTodo = e => {\n    e.preventDefault();\n\n    const todoItem = {\n      id: new Date().getTime(),\n      text: todoText,\n      isChecked: false,\n      isEdit: false\n    };\n\n    if (todoText !== '') {\n      setAllTodos([...allTodos, todoItem]);\n      setTodoText('');\n    }\n  }\n\n  /** localStorage에 있는 이전 todo 목록들을 불러와 allTodos에 담아준다 */\n  const getAllTodos = () => {\n    let stored = JSON.parse(localStorage.getItem('todo'));\n\n    if (stored) {\n      setAllTodos(stored);\n    }\n  }\n\n  /** 체크박스 토글기능 */\n  const toggleChecked = id => {\n    let updatedTodos = allTodos.map(todo => {\n      if (todo.id === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n      return todo;\n    })\n\n    setAllTodos(updatedTodos);\n  }\n\n  /** todo 아이템 삭제 */\n  const deleteTodo = id => {\n    const filteredTodo = allTodos.filter(todo => todo.id !== id);\n    setAllTodos(filteredTodo);\n  }\n\n  const toggleEdit = id => {\n    const editTodos = allTodos.map(todo => {\n      if (todo.id === id) todo.isEdit = !todo.isEdit;\n      return todo;\n    })\n\n    setAllTodos(editTodos);\n  }\n\n  const onEditTodo = (e, id) => {\n    const editTodo = allTodos.map(todo => {\n      if (todo.id === id) todo.text = e.target.value;\n      return todo;\n    })\n\n    setAllTodos(editTodo);\n  }\n\n  useEffect(() => {\n    getAllTodos()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(allTodos));\n  }, [allTodos]);\n\n  return (\n    <main className='App'>\n      <TodoTitle len={allTodos.length}/>\n      <div className='App_todo'>\n        <form className='App_input_wrapper' onSubmit={e => addTodo(e)}>\n          <input \n            type='text' \n            className='App_input' \n            value={todoText}\n            placeholder='Create new todo...'\n            onChange={e => setTodoText(e.target.value)} />\n          <div className='App_input_button' onClick={e => addTodo(e)}>\n            <IoMdAdd size={24} />\n          </div>\n        </form>\n\n        <div className='App_todo_list'>\n          {\n            allTodos.map(todo => (\n              <ListItem\n                key={todo.id}\n                todo={todo}\n                toggleChecked={toggleChecked}\n                deleteTodo={deleteTodo}\n                toggleEdit={toggleEdit}\n                onEditTodo={onEditTodo} />\n            ))\n          }\n          {\n            allTodos.length === 0 && (\n              <p className='empty'>\n                There are no todos\n              </p>\n            )\n          }\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}