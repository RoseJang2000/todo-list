{"ast":null,"code":"var _jsxFileName = \"/Users/rosejang/Desktop/project/todo-list-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { TbArrowBarDown } from 'react-icons/tb';\nimport ListItem from './components/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todoText, setTodoText] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n  const addTodo = e => {\n    e.preventDefault();\n    const todoItem = {\n      id: new Date().getTime(),\n      text: todoText,\n      isChecked: false\n    };\n    if (todoText !== '') {\n      setAllTodos([...allTodos, todoItem]);\n      setTodoText('');\n    }\n  };\n  const getAllTodos = () => {\n    let stored = JSON.parse(localStorage.getItem('todo'));\n    if (stored) {\n      setAllTodos(stored);\n    }\n  };\n  const toggleCheck = id => {\n    let updatedTodos = [...allTodos].map(todo => {\n      if (todo.id === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n      return todo;\n    });\n    setAllTodos(updatedTodos);\n  };\n  useEffect(() => {\n    getAllTodos();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(allTodos));\n  }, [allTodos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"App_input_wrapper\",\n        onSubmit: addTodo,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"App_input\",\n          value: todoText,\n          onChange: e => setTodoText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App_input_button\",\n          onClick: addTodo,\n          children: /*#__PURE__*/_jsxDEV(TbArrowBarDown, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App_todo_list\",\n        children: allTodos.map(todo => /*#__PURE__*/_jsxDEV(ListItem, {\n          text: todo.text,\n          isChecked: todo.isChecked\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aG3g14WeV12xcZ6NEDJDiE3vH/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TbArrowBarDown","ListItem","App","todoText","setTodoText","allTodos","setAllTodos","addTodo","e","preventDefault","todoItem","id","Date","getTime","text","isChecked","getAllTodos","stored","JSON","parse","localStorage","getItem","toggleCheck","updatedTodos","map","todo","setItem","stringify","target","value"],"sources":["/Users/rosejang/Desktop/project/todo-list-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { TbArrowBarDown } from 'react-icons/tb';\nimport ListItem from './components/ListItem';\n\nfunction App() {\n  const [todoText, setTodoText] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n\n  const addTodo = e => {\n    e.preventDefault();\n\n    const todoItem = {\n      id: new Date().getTime(),\n      text: todoText,\n      isChecked: false\n    };\n\n    if (todoText !== '') {\n      setAllTodos([...allTodos, todoItem]);\n      setTodoText('');\n    }\n  }\n\n  const getAllTodos = () => {\n    let stored = JSON.parse(localStorage.getItem('todo'));\n\n    if (stored) {\n      setAllTodos(stored);\n    }\n  }\n\n  const toggleCheck = id => {\n    let updatedTodos = [...allTodos].map(todo => {\n      if (todo.id === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n      return todo;\n    })\n    \n    setAllTodos(updatedTodos);\n  }\n\n  useEffect(() => {\n    getAllTodos()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(allTodos));\n  }, [allTodos]);\n\n  return (\n    <div className='App'>\n      <div className='App_todo'>\n        <form className='App_input_wrapper' onSubmit={addTodo}>\n          <input \n            type='text' \n            className='App_input' \n            value={todoText}\n            onChange={e => setTodoText(e.target.value)} />\n          <div className='App_input_button' onClick={addTodo}>\n            <TbArrowBarDown size={24}/>\n          </div>\n        </form>\n\n        <div className='App_todo_list'>\n          {\n            allTodos.map(todo => (\n              <ListItem\n                key={todo.id}\n                text={todo.text}\n                isChecked={todo.isChecked} />\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}