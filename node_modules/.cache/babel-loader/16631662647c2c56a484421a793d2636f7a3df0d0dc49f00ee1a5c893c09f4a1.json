{"ast":null,"code":"var _jsxFileName = \"/Users/rosejang/Desktop/project/todo-list/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { IoMdAdd } from 'react-icons/io';\nimport ListItem from './components/ListItem';\nimport TodoTitle from './components/TodoTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todoText, setTodoText] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n\n  /** 새로운 할 일을 추가할 때 작동시킬 함수 */\n  const addTodo = e => {\n    e.preventDefault();\n    const todoItem = {\n      id: new Date().getTime(),\n      text: todoText,\n      isChecked: false,\n      isEdit: false\n    };\n    if (todoText !== '') {\n      setAllTodos([...allTodos, todoItem]);\n      setTodoText('');\n    }\n  };\n\n  /** localStorage에 있는 이전 todo 목록들을 불러와 allTodos에 담아준다 */\n  const getAllTodos = () => {\n    let stored = JSON.parse(localStorage.getItem('todo'));\n    if (stored) {\n      setAllTodos(stored);\n    }\n  };\n\n  /** 체크박스 토글기능 */\n  const toggleChecked = id => {\n    let updatedTodos = allTodos.map(todo => {\n      if (todo.id === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n      return todo;\n    });\n    setAllTodos(updatedTodos);\n  };\n\n  /** todo 아이템 삭제 */\n  const deleteTodo = id => {\n    const filteredTodo = allTodos.filter(todo => todo.id !== id);\n    setAllTodos(filteredTodo);\n  };\n  const toggleEdit = id => {\n    const editTodos = allTodos.map(todo => {\n      if (todo.id === id) todo.isEdit = !todo.isEdit;\n      return todo;\n    });\n    setAllTodos(editTodos);\n  };\n  const onEditTodo = (e, id) => {\n    const editTodo = allTodos.map(todo => {\n      if (todo.id === id) todo.text = e.target.value;\n      return todo;\n    });\n    setAllTodos(editTodo);\n  };\n  useEffect(() => {\n    getAllTodos();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(allTodos));\n  }, [allTodos]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TodoTitle, {\n      len: allTodos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"App_input_wrapper\",\n        onSubmit: e => addTodo(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"App_input\",\n          value: todoText,\n          placeholder: \"Create new todo...\",\n          onChange: e => setTodoText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App_input_button\",\n          onClick: e => addTodo(e),\n          children: /*#__PURE__*/_jsxDEV(IoMdAdd, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App_todo_list\",\n        children: [allTodos.map(todo => /*#__PURE__*/_jsxDEV(ListItem, {\n          text: todo.text,\n          isChecked: todo.isChecked,\n          toggleChecked: () => toggleChecked(todo.id),\n          deleteTodo: () => deleteTodo(todo.id),\n          toggleEdit: () => toggleEdit(todo.id),\n          onEditTodo: e => onEditTodo(e, todo.id)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)), allTodos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty\",\n          children: \"There are no todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aG3g14WeV12xcZ6NEDJDiE3vH/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","IoMdAdd","ListItem","TodoTitle","App","todoText","setTodoText","allTodos","setAllTodos","addTodo","e","preventDefault","todoItem","id","Date","getTime","text","isChecked","isEdit","getAllTodos","stored","JSON","parse","localStorage","getItem","toggleChecked","updatedTodos","map","todo","deleteTodo","filteredTodo","filter","toggleEdit","editTodos","onEditTodo","editTodo","target","value","setItem","stringify","length"],"sources":["/Users/rosejang/Desktop/project/todo-list/src/App.js"],"sourcesContent":["import './App.css';\n// import './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { IoMdAdd } from 'react-icons/io';\nimport ListItem from './components/ListItem';\nimport TodoTitle from './components/TodoTitle';\n\nfunction App() {\n  const [todoText, setTodoText] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n\n  /** 새로운 할 일을 추가할 때 작동시킬 함수 */\n  const addTodo = e => {\n    e.preventDefault();\n\n    const todoItem = {\n      id: new Date().getTime(),\n      text: todoText,\n      isChecked: false,\n      isEdit: false\n    };\n\n    if (todoText !== '') {\n      setAllTodos([...allTodos, todoItem]);\n      setTodoText('');\n    }\n  }\n\n  /** localStorage에 있는 이전 todo 목록들을 불러와 allTodos에 담아준다 */\n  const getAllTodos = () => {\n    let stored = JSON.parse(localStorage.getItem('todo'));\n\n    if (stored) {\n      setAllTodos(stored);\n    }\n  }\n\n  /** 체크박스 토글기능 */\n  const toggleChecked = id => {\n    let updatedTodos = allTodos.map(todo => {\n      if (todo.id === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n      return todo;\n    })\n\n    setAllTodos(updatedTodos);\n  }\n\n  /** todo 아이템 삭제 */\n  const deleteTodo = id => {\n    const filteredTodo = allTodos.filter(todo => todo.id !== id);\n    setAllTodos(filteredTodo);\n  }\n\n  const toggleEdit = id => {\n    const editTodos = allTodos.map(todo => {\n      if (todo.id === id) todo.isEdit = !todo.isEdit;\n      return todo;\n    })\n\n    setAllTodos(editTodos);\n  }\n\n  const onEditTodo = (e, id) => {\n    const editTodo = allTodos.map(todo => {\n      if (todo.id === id) todo.text = e.target.value;\n      return todo;\n    })\n\n    setAllTodos(editTodo);\n  }\n\n  useEffect(() => {\n    getAllTodos()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(allTodos));\n  }, [allTodos]);\n\n  return (\n    <main className='App'>\n      <TodoTitle len={allTodos.length}/>\n      <div className='App_todo'>\n        <form className='App_input_wrapper' onSubmit={e => addTodo(e)}>\n          <input \n            type='text' \n            className='App_input' \n            value={todoText}\n            placeholder='Create new todo...'\n            onChange={e => setTodoText(e.target.value)} />\n          <div className='App_input_button' onClick={e => addTodo(e)}>\n            <IoMdAdd size={24} />\n          </div>\n        </form>\n\n        <div className='App_todo_list'>\n          {\n            allTodos.map(todo => (\n              <ListItem\n                key={todo.id}\n                text={todo.text}\n                isChecked={todo.isChecked}\n                toggleChecked={() => toggleChecked(todo.id)}\n                deleteTodo={() => deleteTodo(todo.id)}\n                toggleEdit={() => toggleEdit(todo.id)}\n                onEditTodo={e => onEditTodo(e, todo.id)} />\n            ))\n          }\n          {\n            allTodos.length === 0 && (\n              <p className='empty'>\n                There are no todos\n              </p>\n            )\n          }\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}