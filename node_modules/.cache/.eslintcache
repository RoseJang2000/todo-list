[{"/Users/rosejang/Desktop/project/todo-list-app/src/index.js":"1","/Users/rosejang/Desktop/project/todo-list-app/src/App.js":"2","/Users/rosejang/Desktop/project/todo-list-app/src/components/ListItem.js":"3","/Users/rosejang/Desktop/project/todo-list-app/src/components/TodoTitle.js":"4"},{"size":204,"mtime":1670404121419,"results":"5","hashOfConfig":"6"},{"size":2417,"mtime":1670420891234,"results":"7","hashOfConfig":"6"},{"size":679,"mtime":1670415974257,"results":"8","hashOfConfig":"6"},{"size":251,"mtime":1670419690128,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"8gb6j2",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/Users/rosejang/Desktop/project/todo-list-app/src/index.js",[],[],[],"/Users/rosejang/Desktop/project/todo-list-app/src/App.js",["24"],[],"import './App.css';\n// import './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { IoMdAdd } from 'react-icons/io';\nimport ListItem from './components/ListItem';\nimport TodoTitle from './components/TodoTitle';\nimport { ImBold } from 'react-icons/im';\n\nfunction App() {\n  const [todoText, setTodoText] = useState('');\n  const [allTodos, setAllTodos] = useState([]);\n\n  const addTodo = e => {\n    e.preventDefault();\n\n    const todoItem = {\n      id: new Date().getTime(),\n      text: todoText,\n      isChecked: false\n    };\n\n    if (todoText !== '') {\n      setAllTodos([...allTodos, todoItem]);\n      setTodoText('');\n    }\n  }\n\n  const getAllTodos = () => {\n    let stored = JSON.parse(localStorage.getItem('todo'));\n\n    if (stored) {\n      setAllTodos(stored);\n    }\n  }\n\n  const toggleChecked = id => {\n    let updatedTodos = allTodos.map(todo => {\n      if (todo.id === id) {\n        todo.isChecked = !todo.isChecked;\n      }\n      return todo;\n    })\n\n    setAllTodos(updatedTodos);\n  }\n\n  const deleteTodo = id => {\n    const filteredTodo = allTodos.filter(todo => todo.id !== id);\n    setAllTodos(filteredTodo);\n  }\n\n  useEffect(() => {\n    getAllTodos()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(allTodos));\n  }, [allTodos]);\n\n  return (\n    <main className='App'>\n      <TodoTitle len={allTodos.length}/>\n      <div className='App_todo'>\n        <form className='App_input_wrapper' onSubmit={addTodo}>\n          <input \n            type='text' \n            className='App_input' \n            value={todoText}\n            placeholder='Create new todo...'\n            onChange={e => setTodoText(e.target.value)} />\n          <div className='App_input_button' onClick={e => addTodo(e)}>\n            <IoMdAdd size={24} />\n          </div>\n        </form>\n\n        <div className='App_todo_list'>\n          {\n            allTodos.map(todo => (\n              <ListItem\n                key={todo.id}\n                text={todo.text}\n                isChecked={todo.isChecked}\n                toggleChecked={() => toggleChecked(todo.id)}\n                deleteTodo={() => deleteTodo(todo.id)} />\n            ))\n          }\n          {\n            allTodos.length === 0 && (\n              <p className='empty'>\n                There are no todos\n              </p>\n            )\n          }\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;","/Users/rosejang/Desktop/project/todo-list-app/src/components/ListItem.js",[],[],"/Users/rosejang/Desktop/project/todo-list-app/src/components/TodoTitle.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":7,"column":10,"nodeType":"27","messageId":"28","endLine":7,"endColumn":16},"no-unused-vars","'ImBold' is defined but never used.","Identifier","unusedVar"]